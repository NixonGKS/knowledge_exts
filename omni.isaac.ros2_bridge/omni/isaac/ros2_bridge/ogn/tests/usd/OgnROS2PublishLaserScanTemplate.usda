#usda 1.0
(
    doc ="""Generated from node description file OgnROS2PublishLaserScan.ogn
Contains templates for node types found in that file."""
)

def OmniGraph "TestGraph"
{
    token evaluator:type = "push"
    int2 fileFormatVersion = (1, 3)
    token flatCacheBacking = "Shared"
    token pipelineStage = "pipelineStageSimulation"

    def OmniGraphNode "Template_omni_isaac_ros2_bridge_ROS2PublishLaserScan" (
        docs="""This node publishes LiDAR scans as a ROS2 LaserScan message"""
    )
    {
        token node:type = "omni.isaac.ros2_bridge.ROS2PublishLaserScan"
        int node:typeVersion = 2

        # 17 attributes
        custom float2 inputs:azimuthRange = (0.0, 0.0) (
            docs="""The azimuth range [min, max] (deg). Always [-180, 180] for rotary lidars."""
        )
        custom uint64 inputs:context = 0 (
            docs="""ROS2 context handle, Default of zero will use the default global context"""
        )
        custom float2 inputs:depthRange = (0, 0) (
            docs="""Range for sensor to detect a hit [min, max] (m)"""
        )
        custom uint inputs:execIn (
            docs="""The input execution port"""
        )
        custom string inputs:frameId = "sim_lidar" (
            docs="""FrameId for ROS2 message"""
        )
        custom float inputs:horizontalFov = 0 (
            docs="""Horizontal Field of View (deg)"""
        )
        custom float inputs:horizontalResolution = 0 (
            docs="""Increment between horizontal rays (deg)"""
        )
        custom uchar[] inputs:intensitiesData = [] (
            docs="""Intensity measurements from full scan, ordered by increasing azimuth"""
        )
        custom float[] inputs:linearDepthData = [] (
            docs="""Linear depth measurements from full scan, ordered by increasing azimuth (m)"""
        )
        custom string inputs:nodeNamespace = "" (
            docs="""Namespace of ROS2 Node, prepends any published/subscribed topic by the node namespace"""
        )
        custom int inputs:numCols = 0 (
            docs="""Number of columns in buffers"""
        )
        custom int inputs:numRows = 0 (
            docs="""Number of rows in buffers"""
        )
        custom string inputs:qosProfile = "" (
            docs="""QoS profile config"""
        )
        custom uint64 inputs:queueSize = 10 (
            docs="""The number of messages to queue up before throwing some away, in case messages are collected faster than they can be sent. Only honored if 'history' QoS policy was set to 'keep last'. This setting can be overwritten by qosProfile input."""
        )
        custom float inputs:rotationRate = 0 (
            docs="""Rotation rate of sensor in Hz"""
        )
        custom double inputs:timeStamp = 0.0 (
            docs="""ROS2 Timestamp in seconds"""
        )
        custom string inputs:topicName = "scan" (
            docs="""Name of ROS2 Topic"""
        )
    }
}
