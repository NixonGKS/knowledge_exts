#usda 1.0
(
    doc ="""Generated from node description file OgnROS2CameraInfoHelper.ogn
Contains templates for node types found in that file."""
)

def OmniGraph "TestGraph"
{
    token evaluator:type = "push"
    int2 fileFormatVersion = (1, 3)
    token flatCacheBacking = "Shared"
    token pipelineStage = "pipelineStageSimulation"

    def OmniGraphNode "Template_omni_isaac_ros2_bridge_ROS2CameraInfoHelper" (
        docs="""This node automates the CameraInfo message pipeline for monocular and stereo cameras."""
    )
    {
        token node:type = "omni.isaac.ros2_bridge.ROS2CameraInfoHelper"
        int node:typeVersion = 1

        # 15 attributes
        custom uint64 inputs:context = 0 (
            docs="""ROS2 context handle, Default of zero will use the default global context"""
        )
        custom bool inputs:enabled = true (
            docs="""True to enable the camera helper, False to disable"""
        )
        custom uint inputs:execIn (
            docs="""Triggering this causes the sensor pipeline to be generated"""
        )
        custom string inputs:frameId = "sim_camera" (
            docs="""FrameId for ROS2 message from the monocular or left stereo camera."""
        )
        custom string inputs:frameIdRight = "sim_camera_right" (
            docs="""FrameId for ROS2 message from the right stereo camera."""
        )
        custom uint inputs:frameSkipCount = 0 (
            docs="""Specifies the number of simulation frames to skip between each message publish. (e.g. Set to 0 to publish each frame. Set 1 to publish every other frame)"""
        )
        custom string inputs:nodeNamespace = "" (
            docs="""Namespace of ROS2 Node, prepends any published/subscribed topic by the node namespace"""
        )
        custom string inputs:qosProfile = "" (
            docs="""QoS profile config"""
        )
        custom uint64 inputs:queueSize = 10 (
            docs="""The number of messages to queue up before throwing some away, in case messages are collected faster than they can be sent. Only honored if 'history' QoS policy was set to 'keep last'. This setting can be overwritten by qosProfile input."""
        )
        custom token inputs:renderProductPath = "" (
            docs="""Path of the render product used for capturing data from the monocular or left stereo camera"""
        )
        custom token inputs:renderProductPathRight (
            docs="""Path of the render product used for capturing data from the right stereo camera"""
        )
        custom bool inputs:resetSimulationTimeOnStop = false (
            docs="""If True the simulation time will reset when stop is pressed, False means time increases monotonically. This setting is ignored if useSystemTime is enabled."""
        )
        custom string inputs:topicName = "camera_info" (
            docs="""Topic name for the monocular or left stereo camera data."""
        )
        custom string inputs:topicNameRight = "camera_info_right" (
            docs="""Topic name for the right stereo camera data."""
        )
        custom bool inputs:useSystemTime = false (
            docs="""If True, system timestamp will be included in messages. If False, simulation timestamp will be included in messages"""
        )
    }
}
