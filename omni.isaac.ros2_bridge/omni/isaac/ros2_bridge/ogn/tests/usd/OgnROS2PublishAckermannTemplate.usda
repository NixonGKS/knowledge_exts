#usda 1.0
(
    doc ="""Generated from node description file OgnROS2PublishAckermann.ogn
Contains templates for node types found in that file."""
)

def OmniGraph "TestGraph"
{
    token evaluator:type = "push"
    int2 fileFormatVersion = (1, 3)
    token flatCacheBacking = "Shared"
    token pipelineStage = "pipelineStageSimulation"

    def OmniGraphNode "Template_omni_isaac_ros2_bridge_ROS2PublishAckermannDrive" (
        docs="""This node subscribes to a ROS2 AckermannDriveStamped message"""
    )
    {
        token node:type = "omni.isaac.ros2_bridge.ROS2PublishAckermannDrive"
        int node:typeVersion = 1

        # 13 attributes
        custom double inputs:acceleration = 0.0 (
            docs="""Desired acceleration in m/s^2"""
        )
        custom uint64 inputs:context = 0 (
            docs="""ROS2 context handle, Default of zero will use the default global context"""
        )
        custom uint inputs:execIn (
            docs="""The input execution port."""
        )
        custom string inputs:frameId = "" (
            docs="""FrameId for ROS2 message"""
        )
        custom double inputs:jerk = 0.0 (
            docs="""Desired jerk in m/s^3"""
        )
        custom string inputs:nodeNamespace = "" (
            docs="""Namespace of ROS2 Node, prepends any published/subscribed topic by the node namespace"""
        )
        custom string inputs:qosProfile = "" (
            docs="""QoS profile config"""
        )
        custom uint64 inputs:queueSize = 10 (
            docs="""The number of messages to queue up before throwing some away, in case messages are collected faster than they can be processed. Only honored if 'history' QoS policy was set to 'keep last'. This setting can be overwritten by qosProfile input."""
        )
        custom double inputs:speed = 0.0 (
            docs="""Desired forward speed in m/s"""
        )
        custom double inputs:steeringAngle = 0.0 (
            docs="""Desired virtual angle in radians. Corresponds to the yaw of a virtual wheel located at the center of the front axle"""
        )
        custom double inputs:steeringAngleVelocity = 0.0 (
            docs="""Desired rate of change of virtual angle in rad/s. Corresponds to the yaw of a virtual wheel located at the center of the front axle"""
        )
        custom double inputs:timeStamp = 0 (
            docs="""Timestamp of message in seconds"""
        )
        custom string inputs:topicName = "ackermann_cmd" (
            docs="""Name of ROS2 Topic"""
        )
    }
}
