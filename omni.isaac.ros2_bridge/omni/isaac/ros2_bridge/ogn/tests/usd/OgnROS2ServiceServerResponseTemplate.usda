#usda 1.0
(
    doc ="""Generated from node description file OgnROS2ServiceServerResponse.ogn
Contains templates for node types found in that file."""
)

def OmniGraph "TestGraph"
{
    token evaluator:type = "push"
    int2 fileFormatVersion = (1, 3)
    token flatCacheBacking = "Shared"
    token pipelineStage = "pipelineStageSimulation"

    def OmniGraphNode "Template_omni_isaac_ros2_bridge_OgnROS2ServiceServerResponse" (
        docs="""This node is a generic service server that provides interface for a ROS service. The response fields of the service are parsed and are made accessible via the node based on the service specified from messagePackage, messageSubfolder, messageName. The server sends a response (commanded from the node inputs) to the client. This node can only receive the requests, and should be connected to a OgnROS2ServiceServerRequest through the out serverHandle parameter in order to send a response."""
    )
    {
        token node:type = "omni.isaac.ros2_bridge.OgnROS2ServiceServerResponse"
        int node:typeVersion = 1

        # 7 attributes
        custom uint64 inputs:context = 0 (
            docs="""ROS2 context handle, Default of zero will use the default global context"""
        )
        custom string inputs:messageName = "" (
            docs="""Service name (e.g.: AddTwoInts for example_interfaces/srv/AddTwoInts)"""
        )
        custom string inputs:messagePackage = "" (
            docs="""Package name (e.g.: example_interfaces for example_interfaces/srv/AddTwoInts)"""
        )
        custom string inputs:messageSubfolder = "srv" (
            docs="""Subfolder name (e.g.: srv for example_interfaces/srv/AddTwoInts)"""
        )
        custom string inputs:nodeNamespace = "" (
            docs="""Name of ROS2 Node, prepends any topic published/subscribed by the node name"""
        )
        custom uint inputs:onReceived (
            docs="""The input execution port when a request is received"""
        )
        custom uint64 inputs:serverHandle = 0 (
            docs="""handle to the server"""
        )

        # 1 attribute
        custom uint outputs:execOut (
            docs="""Output execution triggers when a response is sent"""
        )
    }
}
